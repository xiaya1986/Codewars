6 kyu
SQL Basics: Simple JOIN and RANK

For this challenge you need to create a simple SELECT statement that will return all columns from the people table, and join to the sales table so that you can return the COUNT of all sales and RANK each person by their sale_count.

people table schema
id
name
sales table schema
id
people_id
sale
price
You should return all people fields as well as the sale count as "sale_count" and the rank as "sale_rank".

NOTE: You're solution should use pure SQL. Ruby is used within the test cases to do the actual testing.
**********************************************
SELECT p.id, p.name, 
  COUNT(s.sale) AS sale_count, 
  RANK() OVER (PARTITION BY p.id ORDER BY p.id DESC) AS sale_rank 
FROM people p
  INNER JOIN sales s
  ON p.id = s.people_id
  GROUP BY p.id;

//////////////////////////////////////////////////////////////////////////////////////////////////////////
For this challenge your task is to create a simple SELECT statement that will return all columns from the people table, then join that result set to the sales table so that you can return the COUNT of all sales and RANK each person by their sale_count. Add a new field called sale_rank which rank the people by the sale count. And then sort by sale_rankï¼Œ
************************************************************
select
  people.id,
  people.name,
  count(sales.id) AS sale_count,
  rank ()
  over (
    order by count(sales.id) desc
  ) sale_rank
from
  people
join
  sales
ON people.id = people_id
group by
  people.id
